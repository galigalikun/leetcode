fn main() {
    assert_eq!(Solution::valid_palindrome("aba".to_string()), true);
    assert_eq!(Solution::valid_palindrome("abca".to_string()), true);
    assert_eq!(Solution::valid_palindrome("abc".to_string()), false);
    assert_eq!(Solution::valid_palindrome("deeee".to_string()), true);
    assert_eq!(Solution::valid_palindrome("hujovblttvmlnjttskgiprlwmylcucfchhamasycmpfkqgeiuybgostpzxdoocitegzsaoaifrbjkecgmryfoprojtyuitkiakmzyhpvwtnhfrsfvncvcsdxydafedujqlgaseehngtczsdyzxbcragdktilfpuixzegbjufgyqjpmasignsuyvwvmjmlvbwxwqiyqgeyojcmorfqturodjizvpdqypvndvmqpovribirqtgdcxjkgipoqshoqkrxjhdppyiezgbwkeugpdfyxfvzvgvmdemweikhmbaftoxhymmrvlzzwsusyrngqwrurpxhqifkixyfzkvvnshboijvktdaduvgcifljaclvspxquoppdugiircdjpoqxocymdbzjudjnmyqnvnficageqbpznrwzbsttukfqqenadjuycdssxgvbdmrwzgqmfxujyzlcdirieucoqmhaotwvrnztdjijhovbrvgutfnslikurmvlfagmhsxvjinvwwktvxcuibuvmfyvuhdpkryjufdqrbwvkwxcawuseghzelkiazpidmbgphnjtohsopufaftajetspcktnqhhayzkdrpsflaffztnbsikqywetsgpfihdzcauvbmenrhvjmulqvcwkkhyamnjlweqdxffffhkfccwpwwrgopitrndmqciwuxowoxreqgvmnnfcawscriexcivghwtxytylvsiarytqazhpmsinvzsaorhovhuraihihycgbaybcjrzegurodlpaespsgfkpecsrfhzjhnbffwwdgiqpirkiqwdsdafhkznmqtuuvzrkhcygjpaljyeeulkvwtprujhzijzqydgluwczuxqcruodcluagbwokqepsijablqummnktpdkqgotzrwnndagcxycnpeurpqnpszoelhxkaagjxjfkxrppfnawcefjlckhburodlogusaikbmcpcjkwfdozhryrjdlmwfsovgqffuwojgfxykqmyzgeewsqbxgurikbeqpohtwcitzjcuivjgfwrwxaufsxivdfoszsvtmauihuafoqklkjxxdcauqpzzlropxpstwxlyybnbescfoyhurgfxnbagpvkgawyazhfznlxqewbpdgdlasbbwbujtnvzzguchxzoszefknnlojctzvckrpndrhvqxxrsqqnxxqbuknmfkbarejqgyspeswpdkhshwywrsjbselewvdqdsaapgptgsidrzbmsaddvwwquwbdwwscjmvprjcaicludgyxhutgynfpqeoydifeorjoncgvjeqsqwjrsolvgylxltwulhnmzglcnheaiykiejdqtklwwptiyccjaqvdxrlhplwcjmqfrvqdlihjkhwvwuduttuoapsjmjvpkvekjxjwllqqqchhfszydbthykoxfinyqsgaeyubsgnsbicqaptsiyionxsvxqmbgevhdhkwhsuvprbhwhrlmwluffbnyiqnqiynxstmjlkdzwximcrheqhxwfqcxxryncnkytqbkpntqcgpndsqhkqopthrqjaibazxtmwfvvwgivauqiwwaxzrxgkutbbijkcmyzswstzzwziwfakyjaejjzqyzswbiowqzviqytqqjfukmywkwihxcxcadwzcpxncvwqpkehyuomnywdtjtxuqbvflmqsstcamegrhfnafrzbppzfnhpimfhdfhvbyfcxlwijegrwmxnsmxccyqrrxcgndwrgqwrowiqsjpmnllamoqqzzroihhajwjpsymhfadrqzhrakppnbpjydwaclznqzjavewqrfhzjijvglzqiqbpetkqgdrbmmvzkscvjemaxgrnrnkgykdfqrqxpozjshrdxkyffubhryzqdojgxyizyagueunqioiqnpptndmvvilboouovzhpsvkrajkvmspcwhmnkeglvjgvqyzzdtvqseusawqgbpikhwkoztqkxgrzqavufbogmwtxifqfoqaphhywdqrfgqxxrneivyinaociqkhhqcoyzrywzcobwhngjnrvifbajepmnvluhsvxfarvmgoahuweimunxpgvgkyuaylsvjrcqwicvuadguvgbrgmtutyhhpphkzgkvzntmdjzsgsfecsywgjgmymykxadqowktdtcmpxeyixguosnsvbqyyvwunslxuvuogryghumeodytejmulkxnnmtdkuwxgltdqhmxrwdlymxpyntpixnnceruzksikfubtoxuzfxfcuddzstvkighqxhueidbcdybpvxgtbvmwgjndsohzbsrisljwxbrwysqmdtyedpwxpnlkruemoedrgjkoxyzclusfsnbzrfswkpouixokgnzihiyvcxmlgwutoetfebebshttwhsgnwhmeavfwxpzbpykjhtmccknkojyxvfyjideqgjjmgqwmbtcjjuhtdurdjqjzlfeqrxhnlfadphblzxhhchwbulvcbahyocqdhzieepluljibnsessjbumuqwcfksiuiansdahcxnhxpjuiwphythiqsrdrsnyrhyzbqgoirgcrrrjguergkknqjpggaxtbppuatoxuqibrxybwesifglexcglezrwobsbiebiseejveuujvtdgdjjwbaupcclqigqydlwkmjfqkpwesznxxofodbzioouichjjehjivdvgijsrexaqtsnwlmyxvogivucmcfqqlfxysyldyymumbtnfmhhuwgomscxjyxtoifmqfhzdvkezrwjizkbxaqfutatvapdjcyhsutmyyecchivbsenwjsykrsqozozhfcjvavgspsmtluhbgleuhusibxgjbocuanfnknlhyuuvffvxocafjhckiimtcaezwewjakpbsnacsspzylhbbynqklbftxdgrkmamenbgemtfoklihtitfflauckhujnqelooitkjokeozzogtxbeeltocaozzmhrzxjbomllaxdmszbexuxmunpqtucphgwtxznxizwpbtdaoqmgrtywprkytdbgxnjbkaoccnltkcapxnukkkuhphuwvynonaucqhavagcxwprhkwvhjmejdexpmcfxiccmxmbbrwkekdgvulqurfqssmlbfbrlfmimspblrerajvnmjwvlyodwzgrpclwgomeuqrmplavzdccqimjgsxoblavaxzwshvpvfytkwqnbxeyedexyafcbiygqbujrrjalgxhpoohocfvsimklhfyyfglpuirtwpedvkcdhcdwapuouwmvgfbpljrkujoaowxjmsjcdfqbwfuznmynuounqufirxfwntkqiwzaxtropubzhmiukqqxcveofcoqapbqlwcekwcqrauijhmraqnzwygekvnkidxwfllkaijikoyedbyiuwpmhnvbxpfurhgumatqhfyorkwkymtavxohvokxkebqlpaqwzbwahvarxjwlxntufaxnmhbbtjpnhhqouutacqziriwfehrqglslfneasfxseqjgpfvjvzqpocgaiynyipdfmnucveyfcsusagkautuuudxziydxvzpgdneqprufeibibvlrvakeawpwwpbniucsmrxwknwicrvhswavpxkiwnuxxdjkpvjuhefxgulllmhagxnpruqcgcqvgzwuwjnmtpqzjurhdwfjrhdwyouurbfstuigecdqrwnutxlstljzcfhvgyluhijkaqhtwmcddpxvvugqmsvxghtbghakksehvduaujusmwezjbjdhbjzuvvozrawqlmcsdbigvihbonxlpbijamvwlxsalcfwhtgobbezuekeyastwoxovutgvslaqwznoqnzrwkgirztrryheskyeyobylwwhnythudyurpdktalxezmnixqkxyoqzxjyvnohclrwzgeyabgcreitelpjxyytaevuwantuiifwqxkrzkcrqoctjzziuydhcobevcyefozdhzkezpirdfnbmvheawruxfwbclcphphiafcwnuxmkvxzdezvojtdipfjkobmcattuhbjktvzycjllmlqiwqxarvpvbsmermutvxwqnpgudljvttkjnjtpxduobqpzxqbzonbqvtjeltevzaqxgxnqcgthqycqyqdtbrjotswxmrmxyaugmsxnigqhkorgfwzgwjwtxzvyrnqmwxpyxxybaikoccljrnpbmgjdhzxfbgmtoikjzywsxlgmyydvflmgonltjzeruywfzohyyfruetkxmcbxdwsswiqxzrmkxvohvolhflphfoecrdliiqcklbpnitbkhfztdqsivtovtwmswxfdkscvqnotwlyqiynoulzsdexqpfklcthxpzotwyffjdyuobjctktnraaqesocsgtiivjaozypjnkwqtqpesmenxjcwdqaeyqtlhtdkqdmaalxjhubfqhkuwjitgynbytpqzzhgodrcdlndqjrzmrlmcdbpbkqtvhprjfntdcjjagjppbsofgzakmdcwsajbyvgsvahcofyqtsslgdjcpadafcvalablyyviilxzpmdptozghyoyezphnacifzettsrfxgrqjovhuvpkyqkdemeskuwsddvikvnudmofmvqlmafqcerbhwayllgtwvtzezjneqrgwlrnovzkhpzmiljogauryypnuqlgttivogtcevwwdwmbepzpsmihjzeuddtaockwpzdshdiwawoimucqdxuxraehcksotlhphaifhxrzghpznkzdexpejvreilgtekriqkxqjcjgcrsgkbunzqkqcaoctnvseapcbdofzjsckiqvexxgdlryhyphingppzllrsapmdbcdvzqztdcowxfuazxjsaxgurkyjriikzsddcmnredhitqvcdwucpodjlwjvtqonsdplqydqeacosgbucvpqaesvwewygofxaitpvbotlxxuoopyebgbnxnbssbnxnbgbeypoouxxltobvptiaxfogywewvseaqpvcubgsocaeqdyqlpdsnoqtvjwljdopcuwdcvqtihdernmcddszkiirjykrugxasjxzaufxwocdtzqzvdcbdmpasrllzppgnihpyhyrldgxxevqikcsjzfodbcpaesvntcoacqkqznubkgsrcgjcjqxkqirketgliervjepxedzknzphgzrxhfiahphltoskchearxuxdqcumiowawidhsdzpwkcoatdduezjhimspzpebmwdwwvectgovittglqunpyyruagojlimzphkzvonrlwgrqenjzeztvwtgllyawhbrecqfamlqvmfomdunvkivddswuksemedkqykpvuhvojqrgxfrsttezficanhpzeyoyhgzotpdmpzxliivyylbalavcfadapcjdglsstqyfochavsgvybjaswcdmkazgfosbppjgajjcdtnfjrphvtqkbpbdcmlrmzrjqdnldcrdoghzzqptybnygtijwukhqfbuhjxlaamdqkdthltqyeaqdwcjxnemsepqtqwknjpyzoajviitgscoseqaarntktcjbouydjffywtozpxhtclkfpqxdszluonyiqylwtonqvcskdfxwsmwtvotvisqdtzfhkbtinpblkcqiildrceofhplfhlovhovxkmrzxqiwsswdxbcmxkteurfyyhozfwyurezjtlnogmlfvdyymglxswyzjkiotmgbfxzhdjgmbpnrjlccokiabyxxypxwmqnryvzxtwjwgzwfgrokhqginxsmguayxmrmxwstojrbtduqyqcyqhtgcqnxgxqazvetlejtvqbnozbqxzpqboudxptjnjkttvjldugpnqwxvtumremsbvpvraxqwiqlmlljcyzvtkjbhuttacmbokjfpidtjovzedzxvkmxunwcfaihphpclcbwfxurwaehvmbnfdripzekzhdzofeycvebochdyuizzjtcoqrckzrkxqwfiiutnawuveatyyxjpletiercgbayegzwrlchonvyjxzqoyxkqxinmzexlatkdpruyduhtynhwwlyboyeyksehyrrtzrigkwrznqonzwqalsvgtuvoxowtsayekeuzebbogthwfclasxlwvmajibplxnobhivgibdscmlqwarzovvuzjbhdjbjzewmsujuaudvheskkahgbthgxvsmqguvvxpddcmwthqakjihulygvhfczjltslxtunwrqdcegiutsfbruuoywdhrjfwdhrujzqptmnjwuwzgvqcgcqurpnxgahmlllugxfehujvpkjdxxunwikxpvawshvrciwnkwxrmscuinbpwwpwaekavrlvbibiefurpqendgpzvxdyizxduuutuakgasuscfyevcunmfdpiynyiagcopqzvjvfpgjqesxfsaenflslgqrhefwirizqcatuuoqhhnpjtbbhmnxafutnxlwjxravhawbzwqaplqbekxkovhoxvatmykwkroyfhqtamughrufpxbvnhmpwuiybdeyokijiakllfwxdiknvkegywznqarmhjiuarqcwkecwlqbpaqocfoevcxqqkuimhzbuportxazwiqktnwfxrifuqnuounymnzufwbqfdcjsmjxwoaojukrjlpbfgvmwuoupawdchdckvdepwtriuplgfyyfhlkmisvfcohoophxglajrrjubqgyibcfayxedeyexbnqwktyfvpvhswzxavalboxsgjmiqccdzvalpmrquemogwlcprgzwdoylvwjmnvjarerlbpsmimflrbfblmssqfruqluvgdkekwrbbmxmccixfcmpxedjemjhvwkhrpwxcgavahqcuanonyvwuhphukkkunxpacktlnccoakbjnxgbdtykrpwytrgmqoadtbpwzixnzxtwghpcutqpnumxuxebzsmdxallmobjxzrhmzzoacotleebxtgozzoekojktiooleqnjuhkcualfftithilkoftmegbnemamkrgdxtfblkqnybbhlyzpsscansbpkajwewzeactmiikchjfacoxvffvuuyhlnknfnaucobjgxbisuhuelgbhultmspsgvavjcfhzozoqsrkysjwnesbvihcceyymtushycjdpavtatufqaxbkzijwrzekvdzhfqmfiotxyjxcsmogwuhhmfntbmumyydlysyxflqqfcmcuvigovxymlwnstqaxersjigvdvijhejjhciuooizbdofoxxnzsewpkqfjmkwldyqgiqlccpuabwjjdgdtvjuuevjeesibeibsbowrzelgcxelgfisewbyxrbiquxotauppbtxaggpjqnkkgreugjrrrcgriogqbzyhrynsrdrsqihtyhpwiujpxhnxchadsnaiuiskfcwqumubjssesnbijlulpeeizhdqcoyhabcvlubwhchhxzlbhpdaflnhxrqeflzjqjdrudthujjctbmwqgmjjgqedijyfvxyjoknkccmthjkypbzpxwfvaemhwngshwtthsbebefteotuwglmxcvyihizngkoxiuopkwsfrzbnsfsulczyxokjgrdeomeurklnpxwpdeytdmqsywrbxwjlsirsbzhosdnjgwmvbtgxvpbydcbdieuhxqhgikvtszdducfxfzuxotbufkiskzurecnnxiptnypxmyldwrxmhqdtlgxwukdtmnnxklumjetydoemuhgyrgouvuxlsnuwvyyqbvsnsougxiyexpmctdtkwoqdaxkymymgjgwyscefsgszjdmtnzvkgzkhpphhytutmgrbgvugdauvciwqcrjvslyauykgvgpxnumiewuhaogmvrafxvshulvnmpejabfivrnjgnhwboczwyrzyocqhhkqicoaniyvienrxxqgfrqdwyhhpaqofqfixtwmgobfuvaqzrgxkqtzokwhkipbgqwasuesqvtdzzyqvgjvlgeknmhwcpsmvkjarkvsphzvouooblivvmdntppnqioiqnueugayziyxgjodqzyrhbuffykxdrhsjzopxqrqfdkygknrnrgxamejvcskzvmmbrdgqktepbqiqzlgvjijzhfrqwevajzqnzlcawdyjpbnppkarhzqrdafhmyspjwjahhiorzzqqomallnmpjsqiworwqgrwdngcxrrqyccxmsnxmwrgejiwlxcfybvhfdhfmiphnfzppbzrfanfhrgemactssqmlfvbquxtjtdwynmouyhekpqwvcnxpczwdacxcxhiwkwymkufjqqtyqivzqwoibwszyqzjjeajykafwizwzztswszymckjibbtukgxrzxawwiquavigwvvfwmtxzabiajqrhtpoqkhqsdnpgcqtnpkbqtykncnyrxxcqfwxhqehrcmixwzdkljmtsxnyiqnqiynbffulwmlrhwhbrpvushwkhdhvegbmqxvsxnoiyistpaqcibsngsbuyeagsqynifxokyhtbdyzsfhhcqqqllwjxjkevkpvjmjspaouttuduwvwhkjhildqvrfqmjcwlphlrxdvqajccyitpwwlktqdjeikyiaehnclgzmnhluwtlxlygvlosrjwqsqejvgcnojroefidyoeqpfnygtuhxygdulciacjrpvmjcswwdbwuqwwvddasmbzrdisgtpgpaasdqdvwelesbjsrwywhshkdpwsepsygqjerabkfmnkubqxxnqqsrxxqvhrdnprkcvztcjolnnkfezsozxhcugzzvntjubwbbsaldgdpbweqxlnzfhzaywagkvpgabnxfgruhyofcsebnbyylxwtspxporlzzpquacdxxjklkqofauhiuamtvszsofdvixsfuaxwrwfgjviucjzticwthopqebkirugxbqsweegzymqkyxfgjowuffqgvosfwmldjryrhzodfwkjcpcmbkiasugoldorubhkcljfecwanfpprxkfjxjgaakxhleozspnqpruepncyxcgadnnwrztogqkdptknmmuqlbajispeqkowbgaulcdourcqxuzcwulgdyqzjizhjurptwvklueeyjlapjgychkrzvuutqmnzkhfadsdwqikripqigdwwffbnhjzhfrscepkfgspseapldorugezrjcbyabgcyhihiaruhvohroaszvnismphzaqtyraisvlytyxtwhgvicxeircswacfnnmvgqerxowoxuwicqmdnrtipogrwwpwccfkhffffxdqewljnmayhkkwcvqlumjvhrnembvuaczdhifpgstewyqkisbntzffalfsprdkzyahhqntkcpstejatfafuposhotjnhpgbmdipzaiklezhgesuwacxwkvwbrqdfujyrkpdhuvyfmvubiucxvtkwwvnijvxshmgaflvmrukilsnftugvrbvohjijdtznrvwtoahmqocueiridclzyjuxfmqgzwrmdbvgxssdcyujdaneqqfkuttsbzwrnzpbqegacifnvnqymnjdujzbdmycoxqopjdcriigudppouqxpsvlcajlficgvudadtkvjiobhsnvvkzfyxikfiqhxprurwqgnrysuswzzlvrmmyhxotfabmhkiewmedmvgvzvfxyfdpguekwbgzeiyppdhjxrkqohsqopigkjxcdgtqribirvopqmvdnvpyqdpvzijdorutqfromcjoyegqyiqwxwbvlmjmvwvyusngisampjqygfujbgezxiupflitkdgarcbxzydszctgnheesaglqjudefadyxdscvcnvfsrfhntwvphyzmkaiktiuytjorpofyrmgcekjbrfiaoaszgeticoodxzptsogbyuiegqkfpmcysamahhcfcuclymwlrpigksttjnlmvttlbvojuh".to_string()), false);
}

struct Solution {}
impl Solution {
    pub fn valid_palindrome(s: String) -> bool {
        if s == s.chars().rev().collect::<String>() {
            return true;
        }

        for i in 0..s.len() {
            let mut a = s.clone();
            a.remove(i);
            if a == a.chars().rev().collect::<String>() {
                return true;
            }
        }

        return false;
    }
}
